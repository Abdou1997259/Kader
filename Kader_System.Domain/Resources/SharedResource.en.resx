<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accepted" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="Allowance" xml:space="preserve">
    <value>Allowance</value>
  </data>
  <data name="AlreadyExited" xml:space="preserve">
    <value>{0} is Already Exited</value>
  </data>
  <data name="AlreadyExitedWithSameName" xml:space="preserve">
    <value>{0} is Already Exited With Same Name</value>
  </data>
  <data name="AlreadyPaid" xml:space="preserve">
    <value>Already Paid</value>
  </data>
  <data name="AmountTypes" xml:space="preserve">
    <value>Amount Type</value>
  </data>
  <data name="Applicant" xml:space="preserve">
    <value>Applicant</value>
  </data>
  <data name="ApplicantJobNumber" xml:space="preserve">
    <value>Number Of Applicants Fulfilled</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved Sucessfully</value>
  </data>
  <data name="ApprovedAready" xml:space="preserve">
    <value>Approved Aready</value>
  </data>
  <data name="BalanceNotEnough" xml:space="preserve">
    <value>Balance Not Enough</value>
  </data>
  <data name="Benefit" xml:space="preserve">
    <value>Benefit</value>
  </data>
  <data name="Calculated" xml:space="preserve">
    <value>has been already calculated</value>
  </data>
  <data name="CalculatedAready" xml:space="preserve">
    <value>This Employee's Salary has been calculated this month.</value>
  </data>
  <data name="CanceledContract" xml:space="preserve">
    <value>Canceled Contract</value>
  </data>
  <data name="CannotBeFound" xml:space="preserve">
    <value>{0} cannot be found</value>
  </data>
  <data name="CannotDeleteItemHasRelativeData" xml:space="preserve">
    <value>Cannot Delete {0} Has Relative Data</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyContainsEmployee" xml:space="preserve">
    <value>Can't Remove Company Cause It Contains Employee</value>
  </data>
  <data name="CompanyLinkedToUser" xml:space="preserve">
    <value>Can't Remove Company Cause It Is Linked To A User</value>
  </data>
  <data name="ContractNotFound" xml:space="preserve">
    <value>Doesn't have a contract</value>
  </data>
  <data name="CurrentIsNotExitedInCompanys" xml:space="preserve">
    <value>Current Is Not Exited In Companys</value>
  </data>
  <data name="CurrentIsNotExitedInTitle" xml:space="preserve">
    <value>Current  Is Not Exited In Title</value>
  </data>
  <data name="Deduction" xml:space="preserve">
    <value>Deduction</value>
  </data>
  <data name="DelayedSuccessfully" xml:space="preserve">
    <value>Delayed Successfully</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Saved successfully</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="EndJobDate" xml:space="preserve">
    <value>Time of Applicant of job is up</value>
  </data>
  <data name="Faculty" xml:space="preserve">
    <value>Faculty or Section</value>
  </data>
  <data name="FileHasNoDirectory" xml:space="preserve">
    <value>File Has No Directory or not Exited</value>
  </data>
  <data name="FinishedSuccessfully" xml:space="preserve">
    <value>Finished Successfully</value>
  </data>
  <data name="HasNoDocument" xml:space="preserve">
    <value>{0} has no document</value>
  </data>
  <data name="HaveContract" xml:space="preserve">
    <value>this {0} Employee already has a contract</value>
  </data>
  <data name="InvalidSubId" xml:space="preserve">
    <value>Invalid Sub id </value>
  </data>
  <data name="IsCalc" xml:space="preserve">
    <value>this {0} Empolyee's salary has been calcluated </value>
  </data>
  <data name="IsDepartmentInMang" xml:space="preserve">
    <value>There isnt such department in this mangement</value>
  </data>
  <data name="IsExist" xml:space="preserve">
    <value>{0} is exist</value>
  </data>
  <data name="IsNotExisted" xml:space="preserve">
    <value>{0} Is Not Exited</value>
  </data>
  <data name="IsNotExistedIn" xml:space="preserve">
    <value>Not Exited in </value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Loan" xml:space="preserve">
    <value>Loan</value>
  </data>
  <data name="LoanRequest" xml:space="preserve">
    <value>Loan Request</value>
  </data>
  <data name="MainScreen" xml:space="preserve">
    <value>Main screen</value>
  </data>
  <data name="MainScreenCategory" xml:space="preserve">
    <value>Main screen category</value>
  </data>
  <data name="MangerAlready" xml:space="preserve">
    <value>Manger Already , Can't Assgin more than Manger</value>
  </data>
  <data name="NoAdminCreate" xml:space="preserve">
    <value>Can't Added Cause User is not Admin</value>
  </data>
  <data name="NotApproved" xml:space="preserve">
    <value>Approved Failed</value>
  </data>
  <data name="NotFoundData" xml:space="preserve">
    <value>Not found data</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid Sucessfully</value>
  </data>
  <data name="PaidSuccessfuly" xml:space="preserve">
    <value>Paid Successfuly</value>
  </data>
  <data name="PathNotFound" xml:space="preserve">
    <value>Path Not Found</value>
  </data>
  <data name="Qualification" xml:space="preserve">
    <value>Qualification</value>
  </data>
  <data name="Rated" xml:space="preserve">
    <value>Rated</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Resignation" xml:space="preserve">
    <value>Resignation</value>
  </data>
  <data name="Resonsiblities" xml:space="preserve">
    <value>Resonsiblities</value>
  </data>
  <data name="Restored" xml:space="preserve">
    <value>Restored Successfully</value>
  </data>
  <data name="ResumeSuccessfully" xml:space="preserve">
    <value>Resume Successfully</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="SalaryCalculator" xml:space="preserve">
    <value>SalaryCalculator</value>
  </data>
  <data name="SalaryEffect" xml:space="preserve">
    <value>Salary Effect</value>
  </data>
  <data name="SalaryMoreThanInstallment" xml:space="preserve">
    <value>Salary More Than Installment</value>
  </data>
  <data name="SaveSuccessfully" xml:space="preserve">
    <value>Saved Successfully</value>
  </data>
  <data name="ScreenInAction" xml:space="preserve">
    <value>This Screen Does'nt Have This Permssion</value>
  </data>
  <data name="SelfDeleteUser" xml:space="preserve">
    <value>User Can't Remove Him Self</value>
  </data>
  <data name="SubMainScreen" xml:space="preserve">
    <value>Sub main screen</value>
  </data>
  <data name="SuspendedJob" xml:space="preserve">
    <value>Suspended Job</value>
  </data>
  <data name="SuspendedSuccessfully" xml:space="preserve">
    <value>Suspended Successfully</value>
  </data>
  <data name="TitlePermisson" xml:space="preserve">
    <value>Please send the Title</value>
  </data>
  <data name="TitleUser" xml:space="preserve">
    <value> this title has already a user</value>
  </data>
  <data name="TodayTrans" xml:space="preserve">
    <value>You Already Made This Transation On This Employee {0} Today</value>
  </data>
  <data name="University" xml:space="preserve">
    <value>University or Institue</value>
  </data>
  <data name="UniversityContainsFaculty" xml:space="preserve">
    <value>this university or institue dosen't have this seciton or faculty.</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated successfully</value>
  </data>
  <data name="UserInCompany" xml:space="preserve">
    <value>There is not such Compny in your logging User</value>
  </data>
  <data name="UserInTitle" xml:space="preserve">
    <value>There is not such title in your loging User</value>
  </data>
  <data name="UserNotActive" xml:space="preserve">
    <value>this user is not active</value>
  </data>
  <data name="UserPermission" xml:space="preserve">
    <value>This user dosen't have permssions</value>
  </data>
  <data name="Vacation" xml:space="preserve">
    <value>Vacation</value>
  </data>
  <data name="ViewInclude" xml:space="preserve">
    <value>must have a view permission first</value>
  </data>
</root>
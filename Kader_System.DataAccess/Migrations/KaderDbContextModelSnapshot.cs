// <auto-generated />
using System;
using Kader_System.DataAccesss.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kader_System.DataAccess.Migrations
{
    [DbContext(typeof(KaderDbContext))]
    partial class KaderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title_name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Auth_Roles", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da68957ab1",
                            ConcurrencyStamp = "1",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN",
                            Title_name_ar = "سوبر أدمن"
                        },
                        new
                        {
                            Id = "0ffa8112-ba0d-4416-b0ed-992897ac896e",
                            ConcurrencyStamp = "1",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User",
                            NormalizedName = "USER",
                            Title_name_ar = "مستخدم"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Auth_RoleClaims", "dbo");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyYearId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentTitleId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VisiblePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyYearId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Auth_Users", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5basb1",
                            AccessFailedCount = 0,
                            CompanyId = "3,2,1",
                            CompanyYearId = 1,
                            ConcurrencyStamp = "2c6695d7-198f-4045-bf90-2e7e8fddb111",
                            CurrentCompanyId = 3,
                            CurrentTitleId = 1,
                            Email = "mohammed88@gmail.com",
                            EmailConfirmed = true,
                            FinancialYear = 2013,
                            FullName = "Mohamed abdou",
                            ImagePath = "/",
                            IsActive = true,
                            IsDeleted = false,
                            JobId = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "MOHAMMED88@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEK9X2g7cZTEc0aEmXRgkZ+C/2TtjBopzACVPx6FXUdJe1eu5S0Q0Y/jOZmwHYhK2Hg==",
                            PhoneNumber = "1202200",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "202bddf4-42cf-4e1f-855b-e8b724e5f4d2",
                            TitleId = "1,2",
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            VisiblePassword = "123456"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Auth_UserClaims", "dbo");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Auth_UserDevices");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("Auth_UserLogins", "dbo");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("Auth_UserRoles", "dbo");

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da68957ab1",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("Auth_UserTokens", "dbo");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.AuthRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RevokedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Auth_RefreshTokens");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.SpGetScreen", b =>
                {
                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("actions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("cat_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("main_id")
                        .HasColumnType("int");

                    b.Property<string>("main_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("main_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sub_id")
                        .HasColumnType("int");

                    b.Property<string>("sub_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SpGetScreens");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.HrEmployeeRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusBy")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_employee_request");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.PermessionRequests.DelayPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("DelayHours")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_delay_permission");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.PermessionRequests.LeavePermissionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("BackTime")
                        .HasColumnType("time");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeOnly>("LeaveTime")
                        .HasColumnType("time");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_leave_permission_request");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.AllowanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("allowance_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("allowance_request_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("allowance_type_id")
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("allowance_id");

                    b.ToTable("hr_allowance_request");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.ContractTerminationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_contract_termination");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.LoanRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InstallmentsCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_loan_request");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.ResignationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_resignation_request");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.SalaryIncreaseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IncreaseType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IncreaseType");

                    b.ToTable("Hr_SalaryIncreaseRequest");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.VacationRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DayCounts")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("hr_vacation_requests");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.CompanyLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("hr_company_licenses");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("AccountNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_allowances");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("AccountNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_benefits");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Company_licenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_licenses_extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("hr_companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyOwner = "1محمد",
                            CompanyTypeId = 1,
                            Company_licenses = "dad56ad1323",
                            Company_licenses_extension = "234adad",
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "شركه1",
                            NameEn = "Company1"
                        },
                        new
                        {
                            Id = 2,
                            CompanyOwner = "محمد2",
                            CompanyTypeId = 1,
                            Company_licenses = "dad56ad1323",
                            Company_licenses_extension = "234adad",
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "شركه2",
                            NameEn = "Company2"
                        },
                        new
                        {
                            Id = 3,
                            CompanyOwner = "Sallem",
                            CompanyTypeId = 1,
                            Company_licenses = "dad56ad1323",
                            Company_licenses_extension = "234adad",
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "كادر",
                            NameEn = "Kader"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompanyContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyContracts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyContractsExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("hr_company_contracts");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_company_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "شركة",
                            NameInEnglish = "Company"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مؤسسة",
                            NameInEnglish = "Corporate"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrContract", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("end_date")
                        .HasColumnType("date");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fixed_salary")
                        .HasColumnType("float");

                    b.Property<double>("housing_allowance")
                        .HasColumnType("float");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<double>("total_salary")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("employee_id")
                        .IsUnique();

                    b.ToTable("hr_contracts");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrContractAllowancesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AllowanceId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceId");

                    b.HasIndex("ContractId");

                    b.ToTable("hr_contract_allowances_details");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrDeduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("AccountNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_deductions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManagementId")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementId");

                    b.HasIndex("ManagerId");

                    b.ToTable("hr_departments");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ManagementId = 4,
                            NameAr = "ASP قسم ال",
                            NameEn = "ASP Dep"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AccommodationAllowance")
                        .HasColumnType("float");

                    b.Property<long?>("AccountNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("ChildrenNumber")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FamilyNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FingerPrintCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FingerPrintId")
                        .HasColumnType("int");

                    b.Property<string>("FirstNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FixedSalary")
                        .HasColumnType("float");

                    b.Property<string>("FullNameAr")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstNameAr]+' '+[FatherNameAr]+' '+[GrandFatherNameAr]+' '+[FamilyNameAr]");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstNameEn]+' '+[FatherNameEn]+' '+[GrandFatherNameEn]+' '+[FamilyNameEn]");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("GrandFatherNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrandFatherNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ImmediatelyDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagementId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int>("SalaryPaymentWayId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<double>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VacationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("FingerPrintId");

                    b.HasIndex("GenderId");

                    b.HasIndex("JobId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SalaryPaymentWayId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("UserId");

                    b.HasIndex("VacationId");

                    b.ToTable("hr_employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccommodationAllowance = 1500.0,
                            AccountNo = 1234567890L,
                            Address = "Riyadh, Saudi Arabia",
                            BirthDate = new DateOnly(1990, 5, 20),
                            ChildrenNumber = 2,
                            CompanyId = 3,
                            DepartmentId = 5,
                            Email = "ahmed@example.com",
                            EmployeeImage = "image.png",
                            EmployeeImageExtension = ".png",
                            EmployeeTypeId = 1,
                            FamilyNameAr = "السعود",
                            FamilyNameEn = "Al-Saud",
                            FatherNameAr = "محمد",
                            FatherNameEn = "Mohammed",
                            FingerPrintCode = "FP1234",
                            FirstNameAr = "أحمد",
                            FirstNameEn = "Ahmed",
                            FixedSalary = 8000.0,
                            FullNameAr = "أحمد محمد علي السعود",
                            FullNameEn = "Ahmed Mohammed Ali Al-Saud",
                            GenderId = 1,
                            GrandFatherNameAr = "علي",
                            GrandFatherNameEn = "Ali",
                            HiringDate = new DateOnly(2020, 1, 1),
                            ImmediatelyDate = new DateOnly(2020, 1, 2),
                            IsActive = true,
                            IsDeleted = false,
                            JobId = 1,
                            JobNumber = "E1234",
                            ManagementId = 4,
                            MaritalStatusId = 2,
                            NationalId = "1234567890",
                            NationalityId = 1,
                            Note = "No notes",
                            Phone = "0551234567",
                            QualificationId = 1,
                            ReligionId = 1,
                            SalaryPaymentWayId = 1,
                            ShiftId = 1,
                            TotalSalary = 9500.0,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1",
                            VacationId = 1
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_employee_attachments");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("CheckIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckOut")
                        .HasColumnType("time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_Employee_attendance");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_employee_notes");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_employee_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مقيم",
                            NameInEnglish = "Resident"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مواطن",
                            NameInEnglish = "Citizen"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrFingerPrint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("hr_finger_prints");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ذكر",
                            NameInEnglish = "Male"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "أنثى",
                            NameInEnglish = "Female"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasAdditionalTime")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasNeedLicense")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasAdditionalTime = false,
                            HasNeedLicense = false,
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "وظيفة",
                            NameEn = "job"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("hr_managements");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            CompanyId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "ادارة البرمجة",
                            NameEn = "Programming Mangement"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrMaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_maritalStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "أعزب",
                            NameInEnglish = "Single"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "خاطب",
                            NameInEnglish = "Engaged"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "متزوج",
                            NameInEnglish = "Married"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مطللق",
                            NameInEnglish = "Divorced"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrMilitaryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_military_status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "معفى",
                            NameInEnglish = "Exempt"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مؤجل",
                            NameInEnglish = "Delayed"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "انهى الخدمة",
                            NameInEnglish = "Completed"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrNationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_nationalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مصرى",
                            NameInEnglish = "Egyptian "
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "سعودى",
                            NameInEnglish = "Saudian"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_qualifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "بكالريوس حاسبات ومعلومات",
                            NameEn = "Bachelor's degree in computers and information"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrRelegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_relegion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مسلم",
                            NameInEnglish = "Muslim"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مسيحى",
                            NameInEnglish = "Christian"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "غير ذلك",
                            NameInEnglish = "Otherwise"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSalaryCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_salary_calculators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "كل الاتب",
                            NameInEnglish = "All salary"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "الراتب الرئيسى",
                            NameInEnglish = "Main salary"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "بدون راتب",
                            NameInEnglish = "Without salary"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSalaryPaymentWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_salary_paymentWays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "بنكى",
                            NameInEnglish = "Bank"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "نقدى",
                            NameInEnglish = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "حوالة مالية",
                            NameInEnglish = "Money transfer"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("hr_sections");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSectionDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Department_id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Section_id")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Department_id");

                    b.HasIndex("Section_id");

                    b.ToTable("hr_section_departments");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("End_shift")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("Start_shift")
                        .HasColumnType("time");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End_shift = new TimeOnly(0, 0, 0),
                            IsActive = true,
                            IsDeleted = false,
                            Name_ar = "شيفت مسائى",
                            Name_en = "evening shifts",
                            Start_shift = new TimeOnly(0, 0, 0)
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplyAfterMonth")
                        .HasColumnType("int");

                    b.Property<bool>("CanTransfer")
                        .HasColumnType("bit");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalBalance")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("hr_vacations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplyAfterMonth = 1,
                            CanTransfer = true,
                            IsActive = true,
                            IsDeleted = false,
                            NameAr = "اجازة",
                            NameEn = "Vacation",
                            TotalBalance = 3000,
                            VacationTypeId = 1
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacationDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysCount")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaryCalculatorId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaryCalculatorId");

                    b.HasIndex("VacationId");

                    b.ToTable("hr_vacation_distributions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_vacation_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "عام كامل",
                            NameInEnglish = "Full year"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "من تاريخ التعيين",
                            NameInEnglish = "From hiring date"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "من تاريخ الاستحقاق",
                            NameInEnglish = "After hiring days"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrValueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("hr_value_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مبلغ",
                            NameInEnglish = "Percent"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "نسبة",
                            NameInEnglish = "Amount"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.QueryLookup", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("FullNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QueryLookups");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.SPEmployeeDetails", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChildrenNumber")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FingerPrintCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImmediatelyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryPaymentWay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vacation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacationDaysCount")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Applicant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<decimal?>("current_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cv_file_path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("expected_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("image_path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("job_id")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("rate")
                        .HasColumnType("real");

                    b.Property<int>("state_id")
                        .HasColumnType("int");

                    b.Property<int?>("year_of_experiences")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("job_id");

                    b.HasIndex("state_id");

                    b.HasIndex("email", "phone")
                        .IsUnique();

                    b.ToTable("inter_applicants");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.ApplicantState", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("intern_applicant_state");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name_ar = "مقبلة",
                            name_en = "Interviewed"
                        },
                        new
                        {
                            id = 2,
                            name_ar = "مقبول",
                            name_en = "Accepted"
                        },
                        new
                        {
                            id = 3,
                            name_ar = "مرفوض",
                            name_en = "Rejected"
                        },
                        new
                        {
                            id = 4,
                            name_ar = "معلق",
                            name_en = "Suspended"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Education", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("applicant_id")
                        .HasColumnType("int");

                    b.Property<int>("faculty_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("from")
                        .HasColumnType("date");

                    b.Property<DateOnly>("to")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("applicant_id");

                    b.HasIndex("faculty_id");

                    b.ToTable("inter_educations");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Experience", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("applicant_id")
                        .HasColumnType("int");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("from")
                        .HasColumnType("date");

                    b.Property<string>("job_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("to")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("applicant_id");

                    b.ToTable("inter_experiences");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Faculty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("university_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("university_id");

                    b.ToTable("inter_faculties");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name_ar = "حاسبات ومعلومات ",
                            name_en = "Faculty Of University and Informatics",
                            university_id = 1
                        },
                        new
                        {
                            id = 2,
                            name_ar = "تجارة",
                            name_en = "Commercial Faculty",
                            university_id = 1
                        },
                        new
                        {
                            id = 3,
                            name_ar = "حقوق",
                            name_en = "Faculty Of law",
                            university_id = 1
                        },
                        new
                        {
                            id = 4,
                            name_ar = "أداب",
                            name_en = "Faculty of Arts",
                            university_id = 1
                        },
                        new
                        {
                            id = 5,
                            name_ar = "طب",
                            name_en = "Faculty of Medicine",
                            university_id = 1
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("applicant_count")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("from")
                        .HasColumnType("date");

                    b.Property<bool>("is_finished")
                        .HasColumnType("bit");

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("state_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("to")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("state_id");

                    b.ToTable("inter_job");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.JobOffer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("applicant_id")
                        .HasColumnType("int");

                    b.Property<string>("details_message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("interview_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("applicant_id");

                    b.ToTable("inter_job_offer");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.JobState", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("inter_job_state");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name_ar = "تشغيل",
                            name_en = "Resume"
                        },
                        new
                        {
                            id = 2,
                            name_ar = "معلق",
                            name_en = "Suspended"
                        },
                        new
                        {
                            id = 3,
                            name_ar = "انهاء",
                            name_en = "Finish"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.University", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("inter_universities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name_ar = "جامعة عين شمس",
                            name_en = "Ain Shams University"
                        },
                        new
                        {
                            id = 2,
                            name_ar = "جامعة اسكندرية",
                            name_en = "Cairo University"
                        },
                        new
                        {
                            id = 3,
                            name_ar = "جامعة بنها",
                            name_en = "Banha University"
                        },
                        new
                        {
                            id = 4,
                            name_ar = "جامعة المنوفية",
                            name_en = "Manifouia University"
                        },
                        new
                        {
                            id = 5,
                            name_ar = "جامعة اسيوط",
                            name_en = "Asyuit University"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Logging.ComLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptionInnerPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Com_Logs");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.MainScreenTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("st_main_screen_tree");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.SPPermissionStruct", b =>
                {
                    b.Property<string>("actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("cat_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("main_id")
                        .HasColumnType("int");

                    b.Property<string>("main_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("main_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sub_id")
                        .HasColumnType("int");

                    b.Property<string>("sub_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.SPTitlePermissionsBySubScreen", b =>
                {
                    b.Property<string>("PermissionNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("cat_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("main_id")
                        .HasColumnType("int");

                    b.Property<string>("main_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("main_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sub_id")
                        .HasColumnType("int");

                    b.Property<string>("sub_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.SPUserPermissionsBySubScreen", b =>
                {
                    b.Property<string>("PermissionNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("cat_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("main_id")
                        .HasColumnType("int");

                    b.Property<string>("main_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("main_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sub_id")
                        .HasColumnType("int");

                    b.Property<string>("sub_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.Screen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenType")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("st_screen");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.SpGetAllScreens", b =>
                {
                    b.Property<string>("Screen_main_cat_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("cat_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("main_id")
                        .HasColumnType("int");

                    b.Property<string>("main_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sub_id")
                        .HasColumnType("int");

                    b.Property<string>("sub_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("st_actions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "إظهار",
                            NameInEnglish = "view"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "اضافة",
                            NameInEnglish = "add"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "تعديل",
                            NameInEnglish = "edit"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "حذف",
                            NameInEnglish = "delete"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "طباعة",
                            NameInEnglish = "print"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StMainScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Screen_main_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screen_main_title_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screen_main_title_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("st_main_screens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 1,
                            Screen_main_title_ar = "الموارد البشريه",
                            Screen_main_title_en = "Human Resources"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ScreenId");

                    b.ToTable("st_screen_action");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenCat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainScreenId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Screen_cat_title_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screen_cat_title_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MainScreenId");

                    b.ToTable("st_screen_cats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 1,
                            Screen_cat_title_ar = "الاعدادات",
                            Screen_cat_title_en = "Setting"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 2,
                            Screen_cat_title_ar = "اكواد",
                            Screen_cat_title_en = "Codes"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 3,
                            Screen_cat_title_ar = "طلبات",
                            Screen_cat_title_en = "Request"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 4,
                            Screen_cat_title_ar = "حركات",
                            Screen_cat_title_en = "Transcation"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 5,
                            Screen_cat_title_ar = "تقارير",
                            Screen_cat_title_en = "Reports"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 6,
                            Screen_cat_title_ar = "توظيف",
                            Screen_cat_title_en = "Hiring"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            IsDeleted = false,
                            MainScreenId = 1,
                            Order = 7,
                            Screen_cat_title_ar = "الاعدادات HR",
                            Screen_cat_title_en = "Hr Setting"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ScreenCatId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screen_sub_title_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screen_sub_title_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScreenCatId");

                    b.ToTable("st_screens_subs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 1,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "القائمة الرئيسية",
                            Screen_sub_title_en = "Main Screen",
                            Url = "/main/screen_main"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 2,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "القائمة الفرعية",
                            Screen_sub_title_en = "Sub Cat",
                            Url = "/main/screen_cat"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 3,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الشاشات",
                            Screen_sub_title_en = "Screen Sub",
                            Url = "/main/screen_sub"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 4,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "المسئوليات",
                            Screen_sub_title_en = "Titles",
                            Url = "/main/title"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 5,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "مستخدمين",
                            Screen_sub_title_en = "Users",
                            Url = "/main/user"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 6,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "صلاحيات المستخدمين",
                            Screen_sub_title_en = "Users Privilege",
                            Url = "/main/user_permission"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 7,
                            ScreenCatId = 1,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "اعدادات",
                            Screen_sub_title_en = "Settings",
                            Url = "/main/settings/10"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 8,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "شركات",
                            Screen_sub_title_en = "Company",
                            Url = "/codes/company"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 9,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الوظائف",
                            Screen_sub_title_en = "Jobs",
                            Url = "/codes/job"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 10,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "المؤهلات",
                            Screen_sub_title_en = "Qualifications",
                            Url = "/codes/qualification"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 11,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الهيكل الاداري",
                            Screen_sub_title_en = "Structured Managements",
                            Url = "/codes/admin_structure"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 12,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الاجازات",
                            Screen_sub_title_en = "Vacations",
                            Url = "/codes/vacation"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 13,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الموظفين",
                            Screen_sub_title_en = "Employees",
                            Url = "/codes/employee"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 14,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "بدلات",
                            Screen_sub_title_en = "Allowances",
                            Url = "/codes/allowance"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 15,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "استقطاعات",
                            Screen_sub_title_en = "Deductions",
                            Url = "/codes/deduction"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 16,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "استحقاقات",
                            Screen_sub_title_en = "Benefits",
                            Url = "/codes/benefit"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 17,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "العقود",
                            Screen_sub_title_en = "Contracts",
                            Url = "/codes/contract"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 18,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "اجهزة البصمة",
                            Screen_sub_title_en = "Fingerprint Devices",
                            Url = "/codes/fingerprint"
                        },
                        new
                        {
                            Id = 19,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 19,
                            ScreenCatId = 3,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "متابعة الطلبات",
                            Screen_sub_title_en = "Request Tracking",
                            Url = "/requests/follow_request"
                        },
                        new
                        {
                            Id = 20,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 20,
                            ScreenCatId = 3,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "طلب",
                            Screen_sub_title_en = "Request",
                            Url = "/requests/request"
                        },
                        new
                        {
                            Id = 21,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 21,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الاستقطاعات",
                            Screen_sub_title_en = "Deductions",
                            Url = "/transactions/deduction_transaction"
                        },
                        new
                        {
                            Id = 22,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 22,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الاستحقاقات",
                            Screen_sub_title_en = "Benefits",
                            Url = "/transactions/benefit_transaction"
                        },
                        new
                        {
                            Id = 23,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 23,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "السلف",
                            Screen_sub_title_en = "Loans",
                            Url = "/transactions/loan_transaction"
                        },
                        new
                        {
                            Id = 24,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 24,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "البدلات",
                            Screen_sub_title_en = "Allowances Transactions",
                            Url = "/transactions/allowance_transaction"
                        },
                        new
                        {
                            Id = 25,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 25,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الاجازات",
                            Screen_sub_title_en = "Vacations Transactions",
                            Url = "/transactions/vacation_transaction"
                        },
                        new
                        {
                            Id = 26,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 26,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "حساب الرواتب",
                            Screen_sub_title_en = "Salary Calculator",
                            Url = "/transactions/salary_calculator_transaction"
                        },
                        new
                        {
                            Id = 27,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 27,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الصرف",
                            Screen_sub_title_en = "Disbursement",
                            Url = "/transactions/disbursement_transaction"
                        },
                        new
                        {
                            Id = 28,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 28,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "زيادة المرتبات",
                            Screen_sub_title_en = "Salary Increase",
                            Url = "/transactions/salary_increase"
                        },
                        new
                        {
                            Id = 29,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 29,
                            ScreenCatId = 4,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "العهد العينية",
                            Screen_sub_title_en = "Covenants",
                            Url = "/transactions/covenant_transaction"
                        },
                        new
                        {
                            Id = 30,
                            IsActive = true,
                            IsDeleted = false,
                            Order = 30,
                            ScreenCatId = 2,
                            ScreenCode = "01001",
                            Screen_sub_title_ar = "الدوام",
                            Screen_sub_title_en = "Shifts",
                            Url = "/codes/shift"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StSubMainScreenAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MainScreenTreeId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenSubId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("MainScreenTreeId");

                    b.HasIndex("ScreenSubId");

                    b.ToTable("st_sub_main_screen_actions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 2
                        },
                        new
                        {
                            Id = 7,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 2
                        },
                        new
                        {
                            Id = 8,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 2
                        },
                        new
                        {
                            Id = 9,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 2
                        },
                        new
                        {
                            Id = 10,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 2
                        },
                        new
                        {
                            Id = 11,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 3
                        },
                        new
                        {
                            Id = 12,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 3
                        },
                        new
                        {
                            Id = 13,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 3
                        },
                        new
                        {
                            Id = 14,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 3
                        },
                        new
                        {
                            Id = 15,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 3
                        },
                        new
                        {
                            Id = 16,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 4
                        },
                        new
                        {
                            Id = 17,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 4
                        },
                        new
                        {
                            Id = 18,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 4
                        },
                        new
                        {
                            Id = 19,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 4
                        },
                        new
                        {
                            Id = 20,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 4
                        },
                        new
                        {
                            Id = 21,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 5
                        },
                        new
                        {
                            Id = 22,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 5
                        },
                        new
                        {
                            Id = 23,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 5
                        },
                        new
                        {
                            Id = 24,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 5
                        },
                        new
                        {
                            Id = 25,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 5
                        },
                        new
                        {
                            Id = 26,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 6
                        },
                        new
                        {
                            Id = 27,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 6
                        },
                        new
                        {
                            Id = 28,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 6
                        },
                        new
                        {
                            Id = 29,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 6
                        },
                        new
                        {
                            Id = 30,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 6
                        },
                        new
                        {
                            Id = 31,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 7
                        },
                        new
                        {
                            Id = 32,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 7
                        },
                        new
                        {
                            Id = 33,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 7
                        },
                        new
                        {
                            Id = 34,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 7
                        },
                        new
                        {
                            Id = 35,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 7
                        },
                        new
                        {
                            Id = 36,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 8
                        },
                        new
                        {
                            Id = 37,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 8
                        },
                        new
                        {
                            Id = 38,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 8
                        },
                        new
                        {
                            Id = 39,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 8
                        },
                        new
                        {
                            Id = 40,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 8
                        },
                        new
                        {
                            Id = 41,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 9
                        },
                        new
                        {
                            Id = 42,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 9
                        },
                        new
                        {
                            Id = 43,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 9
                        },
                        new
                        {
                            Id = 44,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 9
                        },
                        new
                        {
                            Id = 45,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 9
                        },
                        new
                        {
                            Id = 46,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 10
                        },
                        new
                        {
                            Id = 47,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 10
                        },
                        new
                        {
                            Id = 48,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 10
                        },
                        new
                        {
                            Id = 49,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 10
                        },
                        new
                        {
                            Id = 50,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 10
                        },
                        new
                        {
                            Id = 51,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 11
                        },
                        new
                        {
                            Id = 52,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 11
                        },
                        new
                        {
                            Id = 53,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 11
                        },
                        new
                        {
                            Id = 54,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 11
                        },
                        new
                        {
                            Id = 55,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 11
                        },
                        new
                        {
                            Id = 56,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 12
                        },
                        new
                        {
                            Id = 57,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 12
                        },
                        new
                        {
                            Id = 58,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 12
                        },
                        new
                        {
                            Id = 59,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 12
                        },
                        new
                        {
                            Id = 60,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 12
                        },
                        new
                        {
                            Id = 61,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 13
                        },
                        new
                        {
                            Id = 62,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 13
                        },
                        new
                        {
                            Id = 63,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 13
                        },
                        new
                        {
                            Id = 64,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 13
                        },
                        new
                        {
                            Id = 65,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 13
                        },
                        new
                        {
                            Id = 66,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 14
                        },
                        new
                        {
                            Id = 67,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 14
                        },
                        new
                        {
                            Id = 68,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 14
                        },
                        new
                        {
                            Id = 69,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 14
                        },
                        new
                        {
                            Id = 70,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 14
                        },
                        new
                        {
                            Id = 71,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 15
                        },
                        new
                        {
                            Id = 72,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 15
                        },
                        new
                        {
                            Id = 73,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 15
                        },
                        new
                        {
                            Id = 74,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 15
                        },
                        new
                        {
                            Id = 75,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 15
                        },
                        new
                        {
                            Id = 76,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 16
                        },
                        new
                        {
                            Id = 77,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 16
                        },
                        new
                        {
                            Id = 78,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 16
                        },
                        new
                        {
                            Id = 79,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 16
                        },
                        new
                        {
                            Id = 80,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 16
                        },
                        new
                        {
                            Id = 81,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 17
                        },
                        new
                        {
                            Id = 82,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 17
                        },
                        new
                        {
                            Id = 83,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 17
                        },
                        new
                        {
                            Id = 84,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 17
                        },
                        new
                        {
                            Id = 85,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 17
                        },
                        new
                        {
                            Id = 86,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 18
                        },
                        new
                        {
                            Id = 87,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 18
                        },
                        new
                        {
                            Id = 88,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 18
                        },
                        new
                        {
                            Id = 89,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 18
                        },
                        new
                        {
                            Id = 90,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 18
                        },
                        new
                        {
                            Id = 91,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 19
                        },
                        new
                        {
                            Id = 92,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 19
                        },
                        new
                        {
                            Id = 93,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 19
                        },
                        new
                        {
                            Id = 94,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 19
                        },
                        new
                        {
                            Id = 95,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 19
                        },
                        new
                        {
                            Id = 96,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 20
                        },
                        new
                        {
                            Id = 97,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 20
                        },
                        new
                        {
                            Id = 98,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 20
                        },
                        new
                        {
                            Id = 99,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 20
                        },
                        new
                        {
                            Id = 100,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 20
                        },
                        new
                        {
                            Id = 101,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 21
                        },
                        new
                        {
                            Id = 102,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 21
                        },
                        new
                        {
                            Id = 103,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 21
                        },
                        new
                        {
                            Id = 104,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 21
                        },
                        new
                        {
                            Id = 105,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 21
                        },
                        new
                        {
                            Id = 106,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 22
                        },
                        new
                        {
                            Id = 107,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 22
                        },
                        new
                        {
                            Id = 108,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 22
                        },
                        new
                        {
                            Id = 109,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 22
                        },
                        new
                        {
                            Id = 110,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 22
                        },
                        new
                        {
                            Id = 111,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 23
                        },
                        new
                        {
                            Id = 112,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 23
                        },
                        new
                        {
                            Id = 113,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 23
                        },
                        new
                        {
                            Id = 114,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 23
                        },
                        new
                        {
                            Id = 115,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 23
                        },
                        new
                        {
                            Id = 116,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 24
                        },
                        new
                        {
                            Id = 117,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 24
                        },
                        new
                        {
                            Id = 118,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 24
                        },
                        new
                        {
                            Id = 119,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 24
                        },
                        new
                        {
                            Id = 120,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 24
                        },
                        new
                        {
                            Id = 121,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 25
                        },
                        new
                        {
                            Id = 122,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 25
                        },
                        new
                        {
                            Id = 123,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 25
                        },
                        new
                        {
                            Id = 124,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 25
                        },
                        new
                        {
                            Id = 125,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 25
                        },
                        new
                        {
                            Id = 126,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 26
                        },
                        new
                        {
                            Id = 127,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 26
                        },
                        new
                        {
                            Id = 128,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 26
                        },
                        new
                        {
                            Id = 129,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 26
                        },
                        new
                        {
                            Id = 130,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 26
                        },
                        new
                        {
                            Id = 131,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 27
                        },
                        new
                        {
                            Id = 132,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 27
                        },
                        new
                        {
                            Id = 133,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 27
                        },
                        new
                        {
                            Id = 134,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 27
                        },
                        new
                        {
                            Id = 135,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 27
                        },
                        new
                        {
                            Id = 136,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 28
                        },
                        new
                        {
                            Id = 137,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 28
                        },
                        new
                        {
                            Id = 138,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 28
                        },
                        new
                        {
                            Id = 139,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 28
                        },
                        new
                        {
                            Id = 140,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 28
                        },
                        new
                        {
                            Id = 141,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 29
                        },
                        new
                        {
                            Id = 142,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 29
                        },
                        new
                        {
                            Id = 143,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 29
                        },
                        new
                        {
                            Id = 144,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 29
                        },
                        new
                        {
                            Id = 145,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 29
                        },
                        new
                        {
                            Id = 146,
                            ActionId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 30
                        },
                        new
                        {
                            Id = 147,
                            ActionId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 30
                        },
                        new
                        {
                            Id = 148,
                            ActionId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 30
                        },
                        new
                        {
                            Id = 149,
                            ActionId = 4,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 30
                        },
                        new
                        {
                            Id = 150,
                            ActionId = 5,
                            IsActive = true,
                            IsDeleted = false,
                            ScreenSubId = 30
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubScreenId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("st_user_permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 1,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 2,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 2,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 3,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 3,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 4,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 4,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 5,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 5,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 6,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 6,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 7,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 7,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 8,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 8,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 9,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 9,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 10,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 10,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 11,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 11,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 12,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 12,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 13,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 13,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 14,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 14,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 15,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 15,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 16,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 16,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 17,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 17,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 18,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 18,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 19,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 19,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 20,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 20,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 21,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 21,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 22,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 22,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 23,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 23,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 24,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 24,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 25,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 25,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 26,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 26,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 27,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 27,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 28,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 28,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 29,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 29,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 30,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 30,
                            TitleId = 1,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 31,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 1,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 32,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 2,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 33,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 3,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 34,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 4,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 35,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 5,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 36,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 6,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 37,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 7,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 38,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 8,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 39,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 9,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 40,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 10,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 41,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 11,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 42,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 12,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 43,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 13,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 44,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 14,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 45,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 15,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 46,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 16,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 47,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 17,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 48,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 18,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 49,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 19,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 50,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 20,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 51,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 21,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 52,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 22,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 53,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 23,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 54,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 24,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 55,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 25,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 56,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 26,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 57,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 27,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 58,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 28,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 59,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 29,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        },
                        new
                        {
                            Id = 60,
                            Permission = "1,2,3,4,5",
                            SubScreenId = 30,
                            TitleId = 2,
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5basb1"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TitleNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("st_title");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            TitleNameAr = "مدير عام",
                            TitleNameEn = "maanger"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            TitleNameAr = "مدير مالي",
                            TitleNameEn = "Finnacial manger"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.TitlePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubScreenId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubScreenId");

                    b.HasIndex("TitleId");

                    b.ToTable("st_title_permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 1,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 2,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 3,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 4,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 5,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 6,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 7,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 8,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 9,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 10,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 10,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 11,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 11,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 12,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 12,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 13,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 13,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 14,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 14,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 15,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 15,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 16,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 16,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 17,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 17,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 18,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 18,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 19,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 19,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 20,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 20,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 21,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 21,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 22,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 22,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 23,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 23,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 24,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 24,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 25,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 25,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 26,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 26,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 27,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 27,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 28,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 28,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 29,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 29,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 30,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 30,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 31,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 1,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 32,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 2,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 33,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 3,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 34,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 4,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 35,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 5,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 36,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 6,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 37,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 7,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 38,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 8,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 39,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 9,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 40,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 10,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 41,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 11,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 42,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 12,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 43,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 13,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 44,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 14,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 45,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 15,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 46,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 16,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 47,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 17,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 48,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 18,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 49,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 19,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 50,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 20,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 51,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 21,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 52,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 22,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 53,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 23,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 54,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 24,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 55,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 25,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 56,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 26,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 57,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 27,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 58,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 28,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 59,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 29,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 60,
                            Permissions = "1,2,3,4,5",
                            SubScreenId = 30,
                            TitleId = 2
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.AdvancedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvanceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("trans_advanced_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvanceTypeName = "سلفة"
                        },
                        new
                        {
                            Id = 2,
                            AdvanceTypeName = "مخالفة مرورية"
                        },
                        new
                        {
                            Id = 3,
                            AdvanceTypeName = "حوادث وأصلاحات"
                        },
                        new
                        {
                            Id = 4,
                            AdvanceTypeName = "نقل خدمات"
                        },
                        new
                        {
                            Id = 5,
                            AdvanceTypeName = "مخالفة مرورية"
                        },
                        new
                        {
                            Id = 6,
                            AdvanceTypeName = "تأمينات"
                        },
                        new
                        {
                            Id = 7,
                            AdvanceTypeName = "تسويات اخري"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.CompanyYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("company_years");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FinancialYear = "2022"
                        },
                        new
                        {
                            Id = 2,
                            FinancialYear = "2023"
                        },
                        new
                        {
                            Id = 3,
                            FinancialYear = "2024"
                        },
                        new
                        {
                            Id = 4,
                            FinancialYear = "2025"
                        },
                        new
                        {
                            Id = 5,
                            FinancialYear = "2026"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.SpCaclauateSalaryDetailedTrans", b =>
                {
                    b.Property<double?>("AccommodationAllowance")
                        .HasColumnType("float");

                    b.Property<int?>("CalculateSalaryDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("CalculateSalaryId")
                        .HasColumnType("int");

                    b.Property<double?>("CalculatedSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FullNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("JournalDate")
                        .HasColumnType("date");

                    b.Property<string>("JournalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransId")
                        .HasColumnType("int");

                    b.Property<string>("TransNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.SpCaclauateSalaryDetails", b =>
                {
                    b.Property<double?>("CalculatedSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("JournalType")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.SpCacluateSalary", b =>
                {
                    b.Property<double?>("AccommodationAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("CalculatedSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double?>("FixedSalary")
                        .HasColumnType("float");

                    b.Property<string>("FullNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ActionMonth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AllowanceId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CalculateSalaryDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("CalculateSalaryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaryEffectId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SalaryEffectId");

                    b.ToTable("trans_allowances");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransAmountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("trans_amount_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ساعة",
                            NameInEnglish = "Hour"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "أيام عمل",
                            NameInEnglish = "Work days"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "القيمة",
                            NameInEnglish = "Value"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("action_month")
                        .HasColumnType("date");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<int>("amount_type_id")
                        .HasColumnType("int");

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("benefit_id")
                        .HasColumnType("int");

                    b.Property<int?>("calculate_salary_details_id")
                        .HasColumnType("int");

                    b.Property<int?>("calculate_salary_id")
                        .HasColumnType("int");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salary_effect_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("amount_type_id");

                    b.HasIndex("benefit_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("salary_effect_id");

                    b.ToTable("trans_benefits");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransCovenant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("employee_id");

                    b.ToTable("trans_covenants");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransDeduction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("action_month")
                        .HasColumnType("date");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<int>("amount_type_id")
                        .HasColumnType("int");

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("calculate_salary_details_id")
                        .HasColumnType("int");

                    b.Property<int?>("calculate_salary_id")
                        .HasColumnType("int");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<int>("deduction_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salary_effect_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("amount_type_id");

                    b.HasIndex("deduction_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("salary_effect_id");

                    b.ToTable("trans_deductions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("AdvanceType")
                        .HasColumnType("smallint");

                    b.Property<int?>("CalculateSalaryDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("CalculateSalaryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndCalculationDate")
                        .HasColumnType("date");

                    b.Property<int>("InstallmentCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("LoanType")
                        .HasColumnType("smallint");

                    b.Property<decimal>("MonthlyDeducted")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrevDedcutedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("StartCalculationDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartLoanDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("trans_loan");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransLoanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("DeductionDate")
                        .HasColumnType("date");

                    b.Property<int>("DelayCount")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int?>("TransLoanId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransLoanId");

                    b.ToTable("trans_loan_details");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrated")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("trans_salary_calculators");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryCalculatorDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("NetSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalAllownces")
                        .HasColumnType("float");

                    b.Property<double?>("TotalBenefits")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDeductions")
                        .HasColumnType("float");

                    b.Property<double?>("TotalLoans")
                        .HasColumnType("float");

                    b.Property<int?>("TransSalaryCalculatorsId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransSalaryCalculatorsId");

                    b.ToTable("trans_salary_calculators_details");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("trans_salary_effects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "قطعى",
                            NameInEnglish = "On time"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "شهرى",
                            NameInEnglish = "Monthly"
                        });
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryIncrease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Employee_id")
                        .HasColumnType("int");

                    b.Property<int>("Increase_type")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PreviousSalary")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("salaryAfterIncrease")
                        .HasColumnType("float");

                    b.Property<DateOnly>("transactionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Employee_id");

                    b.HasIndex("Increase_type");

                    b.ToTable("trans_salary_increases");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransVacation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("Add_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Added_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("calculate_salary_details_id")
                        .HasColumnType("int");

                    b.Property<int?>("calculate_salary_id")
                        .HasColumnType("int");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<double>("days_count")
                        .HasColumnType("float");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("salary_amount")
                        .HasColumnType("float");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<int>("vacation_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employee_id");

                    b.HasIndex("vacation_id");

                    b.ToTable("trans_vacations");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUser", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Trans.CompanyYear", "CompanyYear")
                        .WithMany("Users")
                        .HasForeignKey("CompanyYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyYear");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserClaim", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserDevice", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", "User")
                        .WithMany("ListOfDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserLogin", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserRole", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUserToken", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.AuthRefreshToken", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.PermessionRequests.DelayPermission", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("DelayPermissionId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("DelayPermissionId");

                            b1.ToTable("hr_delay_permission");

                            b1.WithOwner()
                                .HasForeignKey("DelayPermissionId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.PermessionRequests.LeavePermissionRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("LeavePermissionRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("LeavePermissionRequestId");

                            b1.ToTable("hr_leave_permission_request");

                            b1.WithOwner()
                                .HasForeignKey("LeavePermissionRequestId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.AllowanceRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrAllowance", "HrAllowance")
                        .WithMany()
                        .HasForeignKey("allowance_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("AllowanceRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("AllowanceRequestId");

                            b1.ToTable("hr_allowance_request");

                            b1.WithOwner()
                                .HasForeignKey("AllowanceRequestId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("HrAllowance");

                    b.Navigation("StatuesOfRequest");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.ContractTerminationRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("ContractTerminationRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("ContractTerminationRequestId");

                            b1.ToTable("hr_contract_termination");

                            b1.WithOwner()
                                .HasForeignKey("ContractTerminationRequestId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.LoanRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("LoanRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("LoanRequestId");

                            b1.ToTable("hr_loan_request");

                            b1.WithOwner()
                                .HasForeignKey("LoanRequestId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.ResignationRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("ResignationRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("ResignationRequestId");

                            b1.ToTable("hr_resignation_request");

                            b1.WithOwner()
                                .HasForeignKey("ResignationRequestId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.SalaryIncreaseRequest", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrValueType", "ValueType")
                        .WithMany()
                        .HasForeignKey("IncreaseType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("SalaryIncreaseRequestId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("SalaryIncreaseRequestId");

                            b1.ToTable("Hr_SalaryIncreaseRequest");

                            b1.WithOwner()
                                .HasForeignKey("SalaryIncreaseRequestId");
                        });

                    b.Navigation("StatuesOfRequest");

                    b.Navigation("ValueType");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.EmployeeRequests.Requests.VacationRequests", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrVacationType", "VacationType")
                        .WithMany()
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Kader_System.Domain.Models.EmployeeRequests.Requests.StatuesOfRequest", "StatuesOfRequest", b1 =>
                        {
                            b1.Property<int>("VacationRequestsId")
                                .HasColumnType("int");

                            b1.Property<int?>("ApporvalStatus")
                                .HasColumnType("int")
                                .HasColumnName("ApporvalStatus");

                            b1.Property<string>("ApprovedBy")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprovedBy");

                            b1.Property<DateTime?>("ApprovedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("ApprovedDate");

                            b1.Property<string>("StatusMessage")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusMessage");

                            b1.Property<int?>("StatusTypes")
                                .HasColumnType("int")
                                .HasColumnName("Status");

                            b1.HasKey("VacationRequestsId");

                            b1.ToTable("hr_vacation_requests");

                            b1.WithOwner()
                                .HasForeignKey("VacationRequestsId");
                        });

                    b.Navigation("Employee");

                    b.Navigation("StatuesOfRequest");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.CompanyLicense", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany("Licenses")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompany", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompanyContract", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany("ListOfsContract")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrContract", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithOne("Contract")
                        .HasForeignKey("Kader_System.Domain.Models.HR.HrContract", "employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrContractAllowancesDetail", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrAllowance", "Allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrContract", "Contract")
                        .WithMany("list_of_allowances_details")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrDepartment", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrManagement", "Management")
                        .WithMany("HrDepartments")
                        .HasForeignKey("ManagementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Management");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployee", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany("HrEmployees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrDepartment", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrFingerPrint", "FingerPrint")
                        .WithMany()
                        .HasForeignKey("FingerPrintId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Kader_System.Domain.Models.HR.HrGender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrJob", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrMaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrNationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrQualification", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrRelegion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrSalaryPaymentWay", "SalaryPaymentWay")
                        .WithMany()
                        .HasForeignKey("SalaryPaymentWayId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrShift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Kader_System.Domain.Models.HR.HrVacation", "Vacation")
                        .WithMany("Employees")
                        .HasForeignKey("VacationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("EmployeeType");

                    b.Navigation("FingerPrint");

                    b.Navigation("Gender");

                    b.Navigation("Job");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");

                    b.Navigation("Qualification");

                    b.Navigation("Religion");

                    b.Navigation("SalaryPaymentWay");

                    b.Navigation("Shift");

                    b.Navigation("User");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeAttachment", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany("ListOfAttachments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeAttendance", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployeeNotes", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrFingerPrint", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrManagement", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany("HrManagements")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Manager")
                        .WithOne("Management")
                        .HasForeignKey("Kader_System.Domain.Models.HR.HrManagement", "ManagerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSection", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSectionDepartment", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("Department_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrSection", "Section")
                        .WithMany("ListOfDepartments")
                        .HasForeignKey("Section_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacation", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrVacationType", "VacationType")
                        .WithMany()
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacationDistribution", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrSalaryCalculator", "SalaryCalculator")
                        .WithMany()
                        .HasForeignKey("SalaryCalculatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrVacation", "Vacation")
                        .WithMany("VacationDistributions")
                        .HasForeignKey("VacationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SalaryCalculator");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Applicant", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.Job", "job")
                        .WithMany("applicants")
                        .HasForeignKey("job_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Interviews.ApplicantState", "state")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("job");

                    b.Navigation("state");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Education", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.Applicant", "applicant")
                        .WithMany("educations")
                        .HasForeignKey("applicant_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Interviews.Faculty", "faculty")
                        .WithMany("educations")
                        .HasForeignKey("faculty_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("applicant");

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Experience", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.Applicant", "applicant")
                        .WithMany("experiences")
                        .HasForeignKey("applicant_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("applicant");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Faculty", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.University", "university")
                        .WithMany("faculties")
                        .HasForeignKey("university_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("university");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Job", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.JobState", "state")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("state");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.JobOffer", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Interviews.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("applicant_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.MainScreenTree", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.MainScreenTree", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.Screen", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.Screen", "ParentScreen")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentScreen");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenAction", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.StAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Setting.StScreenSub", "Screen")
                        .WithMany()
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Screen");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenCat", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.StMainScreen", "ScreenMain")
                        .WithMany("CategoryScreen")
                        .HasForeignKey("MainScreenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ScreenMain");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenSub", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.StScreenCat", "ScreenCat")
                        .WithMany("StScreenSub")
                        .HasForeignKey("ScreenCatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ScreenCat");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StSubMainScreenAction", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.StAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Setting.MainScreenTree", null)
                        .WithMany("ListOfActions")
                        .HasForeignKey("MainScreenTreeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Kader_System.Domain.Models.Setting.StScreenSub", "ScreenSub")
                        .WithMany("ListOfActions")
                        .HasForeignKey("ScreenSubId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("ScreenSub");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.TitlePermission", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Setting.StScreenSub", "ScreenSub")
                        .WithMany()
                        .HasForeignKey("SubScreenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Title", "Title")
                        .WithMany("TitlePermissions")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ScreenSub");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransAllowance", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrAllowance", "Allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Trans.TransSalaryEffect", "SalaryEffect")
                        .WithMany()
                        .HasForeignKey("SalaryEffectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Employee");

                    b.Navigation("SalaryEffect");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransBenefit", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Trans.TransAmountType", "amount_type")
                        .WithMany()
                        .HasForeignKey("amount_type_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrBenefit", "benefit")
                        .WithMany()
                        .HasForeignKey("benefit_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Trans.TransSalaryEffect", "salary_effect")
                        .WithMany()
                        .HasForeignKey("salary_effect_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("amount_type");

                    b.Navigation("benefit");

                    b.Navigation("employee");

                    b.Navigation("salary_effect");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransCovenant", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransDeduction", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Trans.TransAmountType", "amount_type")
                        .WithMany()
                        .HasForeignKey("amount_type_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrDeduction", "deduction")
                        .WithMany()
                        .HasForeignKey("deduction_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.Trans.TransSalaryEffect", "salary_effect")
                        .WithMany()
                        .HasForeignKey("salary_effect_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("amount_type");

                    b.Navigation("deduction");

                    b.Navigation("employee");

                    b.Navigation("salary_effect");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransLoan", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "HrEmployee")
                        .WithMany("TransLoans")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HrEmployee");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransLoanDetails", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Trans.TransLoan", "TransLoan")
                        .WithMany("TransLoanDetails")
                        .HasForeignKey("TransLoanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TransLoan");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryCalculatorDetail", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.Trans.TransSalaryCalculator", "TransSalaryCalculators")
                        .WithMany("TransSalaryCalculatorsDetails")
                        .HasForeignKey("TransSalaryCalculatorsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("TransSalaryCalculators");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryIncrease", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrValueType", "ValueType")
                        .WithMany()
                        .HasForeignKey("Increase_type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransVacation", b =>
                {
                    b.HasOne("Kader_System.Domain.Models.HR.HrEmployee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kader_System.Domain.Models.HR.HrVacationDistribution", "vacation")
                        .WithMany()
                        .HasForeignKey("vacation_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("vacation");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Auth.ApplicationUser", b =>
                {
                    b.Navigation("ListOfDevices");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrCompany", b =>
                {
                    b.Navigation("HrEmployees");

                    b.Navigation("HrManagements");

                    b.Navigation("Licenses");

                    b.Navigation("ListOfsContract");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrContract", b =>
                {
                    b.Navigation("list_of_allowances_details");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrDepartment", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrEmployee", b =>
                {
                    b.Navigation("Contract")
                        .IsRequired();

                    b.Navigation("ListOfAttachments");

                    b.Navigation("Management")
                        .IsRequired();

                    b.Navigation("TransLoans");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrManagement", b =>
                {
                    b.Navigation("HrDepartments");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrSection", b =>
                {
                    b.Navigation("ListOfDepartments");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.HR.HrVacation", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("VacationDistributions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Applicant", b =>
                {
                    b.Navigation("educations");

                    b.Navigation("experiences");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Faculty", b =>
                {
                    b.Navigation("educations");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.Job", b =>
                {
                    b.Navigation("applicants");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Interviews.University", b =>
                {
                    b.Navigation("faculties");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.MainScreenTree", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ListOfActions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StMainScreen", b =>
                {
                    b.Navigation("CategoryScreen");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenCat", b =>
                {
                    b.Navigation("StScreenSub");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Setting.StScreenSub", b =>
                {
                    b.Navigation("ListOfActions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Title", b =>
                {
                    b.Navigation("TitlePermissions");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.CompanyYear", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransLoan", b =>
                {
                    b.Navigation("TransLoanDetails");
                });

            modelBuilder.Entity("Kader_System.Domain.Models.Trans.TransSalaryCalculator", b =>
                {
                    b.Navigation("TransSalaryCalculatorsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
